// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[0..2], a = a1, b = b1, c = c1, d = d1, e = e1, f = f1, g = g1, h = h1);
    RAM512(in = in, load = a1, address = address[3..11], out = aa1);
    RAM512(in = in, load = b1, address = address[3..11], out = bb1);
    RAM512(in = in, load = c1, address = address[3..11], out = cc1);
    RAM512(in = in, load = d1, address = address[3..11], out = dd1);
    RAM512(in = in, load = e1, address = address[3..11], out = ee1);
    RAM512(in = in, load = f1, address = address[3..11], out = ff1);
    RAM512(in = in, load = g1, address = address[3..11], out = gg1);
    RAM512(in = in, load = h1, address = address[3..11], out = hh1);
    Mux8Way16(a = aa1, b = bb1, c = cc1, d = dd1, e = ee1, f = ff1, g = gg1, h = hh1, sel = address[0..2], out = out);
    // Put your code here:
}
