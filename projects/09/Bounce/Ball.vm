function Ball.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push argument 4
pop this 4
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.return_x 0
push argument 0
pop pointer 0
push this 0
return
function Ball.return_y 0
push argument 0
pop pointer 0
push this 1
return
function Ball.move_ball 2
push argument 0
pop pointer 0
push this 0
pop local 0
push this 1
pop local 1
push local 0
push this 3
add
pop local 0
push local 1
push this 4
add
pop local 1
push local 0
push this 2
lt
push local 0
push constant 509
push this 2
sub
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 1
neg
call Math.multiply 2
pop this 3
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 3
add
pop this 0
goto IF_END0
label IF_FALSE0
push local 0
pop this 0
label IF_END0
push local 1
push this 2
lt
push local 1
push constant 253
push this 2
sub
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
push constant 1
neg
call Math.multiply 2
pop this 4
push this 1
push this 4
add
pop this 1
goto IF_END1
label IF_FALSE1
push local 1
pop this 1
label IF_END1
push constant 0
return
